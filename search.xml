<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Guangzhou</title>
      <link href="/2018/07/23/Guangzhou/"/>
      <url>/2018/07/23/Guangzhou/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World -- 新博客第一篇</title>
      <link href="/2018/04/28/hello-world/"/>
      <url>/2018/04/28/hello-world/</url>
      <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><blockquote><p>pages 的第一次提交还是去年, 直到今年才开始写…<br>之前用的国外的 vps+WordPress, IP 被封掉了, 希望这次能坚持下来.</p></blockquote><h2 id="GitHub-Pages-Hexo-的博客搭建"><a href="#GitHub-Pages-Hexo-的博客搭建" class="headerlink" title="GitHub Pages + Hexo 的博客搭建"></a>GitHub Pages + Hexo 的博客搭建</h2><ol><li>要有 Git, 以及创建一个 github.io 的 repo, 这是前提</li><li>本地安装 hexo 以及配置:<ol><li>本地安装 nodejs, 终端执行<blockquote><p>brew install node     (请先确保已安装 Homebrew)<br>或者去 nodejs 官网下载 pkg 文件安装也行.</p></blockquote></li><li>通过 npm 安装 hexo<blockquote><p>npm install -g hexo  (10.12 以后需要 sudo 权限)</p></blockquote></li><li>建议在第 2 个操作之前, 先创建一个 hexo 的安装目录<blockquote><p>mkdir yourHexoFolderName<br>cd yourHexoFolderName<br> 然后再执行 2.</p></blockquote></li><li>进入你 hexo 所在的文件夹, 执行以下命令初始化<blockquote><p>hexo init </p></blockquote><pre><code>#初始化hexo</code></pre><blockquote><p>npm install</p></blockquote><pre><code>#安装必要组件, 同 2, 10.12 以后需要 sudo 权限.</code></pre></li></ol></li><li>hexo 简单目录介绍<ol><li>_config.yml, hexo 的主要配置文件, 类比于 App 里面的 preferences. 各类功能都需要编辑这个文件.</li><li>source, 所有 page 和文章都会存在这个文件夹.</li><li>theme, 主题文件夹, 存放主题用.</li></ol></li><li>hexo 四个基本操作<ol><li>hexo s 本地调试, 可以增加 debug 参数</li><li>hexo g/generator, 生成命令, 编辑文档以后需要生成页面.</li><li>hexo c, 清空命令, 清空cache 和 hexo g 生成的一些文件等</li><li>hexo d, 部署命令, 将 hexo 部署到指定目标.</li><li>使用顺序: hexo clean → hexo g -&gt; hexo d 或者 hexo clean -&gt; hexo s -&gt; hexo g -&gt; hexo d</li></ol></li><li>具体使用: <ol><li>配置主目录下的 _config.yml 文件, 修改 deploy 目标地址为 Git.io 的地址. 其他部分可以参考 hexo 官方文档配置.</li><li>修改主题, 默认主题可修改, 常用的有 yelee 等等, 可以自行参考各主题 Git 进行优化. 需要注意的是不要弄混了主题自带的 _config.yml 和 hexo 根目录下面的 _config.yml 文件.</li><li>插件安装, npm install pluginname –save, 常用的有 sitemap, 用于搜索; feed, 用于 RSS 订阅</li></ol></li><li>GitHub Pages 自定义域名.<ol><li>给域名增加一条 CNAME 解析或者 A 解析至 reponame.github.io 或者对应的 ip 地址. (ping reponame.github.io 可获得对应的 ip 地址.)</li><li>打开你的 github pages 对应的 repo, 转到 setting, 对应的 GitHub Pages 选项下, custom domain 输入刚刚添加了解析记录的域名. 点击 save, 正常情况下成功会显示: Your site is published at <a href="http://yourdomain.com" target="_blank" rel="noopener">http://yourdomain.com</a>. 如果出错, 请根据对应的提示自行解决, 大部分是 DNS 的问题.</li><li>在 Custom domain 下面有一项 Enforce HTTPS 选项. 开启以后会使得部分主体的部分功能失效.</li><li>另外, 使用 hexo 管理 pages 的时候, 需要在 hexo 所在文件夹下的 source 文件夹下面新建一个名字为: CNAME 的文件, 无后缀. 打开以后将你的域名, 不加 http, 不加 www, 写在第一行. 不然 hexo 的每次 deploy 都会覆盖掉解析. </li></ol></li></ol>]]></content>
      
      
    </entry>
    
  
  
</search>
